
'use server';
/**
 * @fileOverview An AI agent that generates a detailed narrative insight for a given topic or coin.
 *
 * - getMarketNarratives - A function that generates the detailed narrative.
 * - GetMarketNarrativesInput - The input type for the function.
 * - GetMarketNarrativesOutput - The return type for the function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GetMarketNarrativesInputSchema = z.object({
  topic: z.string().describe('The topic, market segment, or specific coin name to analyze for narratives (e.g., "Meme Coins", "Solana Ecosystem", "Dogecoin").'),
});
export type GetMarketNarrativesInput = z.infer<typeof GetMarketNarrativesInputSchema>;

const DetailedNarrativeSchema = z.object({
  analyzedTopic: z.string().describe('The coin or topic that was analyzed.'),
  generatedNarrative: z.string().describe('The main 1-3 paragraph narrative insight generated by the AI, covering the current market tone, key catalysts or concerns, and probable storyline.'),
  marketTone: z.string().describe('The current overall market tone regarding the topic (e.g., "Bullish with caution", "Speculative frenzy", "Consolidating after volatility").'),
  keyCatalystsOrConcerns: z.array(z.string()).describe('A list of 2-4 key catalysts that might drive price movement or key concerns to watch out for.'),
  probableStoryline: z.string().describe('A plausible short-term storyline explaining why the coin might pump or dump soon, based on current factors.'),
  strategicOutlook: z.string().describe('A brief strategic outlook, considering short-term vs. long-term perspectives or potential pivot points.'),
  confidence: z.enum(['High', 'Medium', 'Low']).describe("The AI's confidence level in this narrative assessment."),
  analysisDate: z.string().describe("The date this narrative analysis was performed."),
});
export type DetailedNarrative = z.infer<typeof DetailedNarrativeSchema>;


const GetMarketNarrativesOutputSchema = z.object({
  narrativeInsight: DetailedNarrativeSchema,
  disclaimer: z
    .string()
    .default('Narrative insights are AI-generated based on simulated market understanding and publicly available information. This does not constitute financial advice. Narratives can shift rapidly and are highly speculative. DYOR.')
    .describe('Standard disclaimer for narrative analysis.'),
});
export type GetMarketNarrativesOutput = z.infer<typeof GetMarketNarrativesOutputSchema>;

export async function getMarketNarratives(input: GetMarketNarrativesInput): Promise<GetMarketNarrativesOutput> {
  return getMarketNarrativesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'getDetailedMarketNarrativePrompt',
  input: {schema: GetMarketNarrativesInputSchema},
  output: {schema: GetMarketNarrativesOutputSchema},
  prompt: `You are an AI crypto analyst specializing in generating compelling short-term narratives. Generate a detailed narrative insight for the coin or topic: {{{topic}}}.

Your analysis should simulate understanding of:
- Market sentiment (e.g., from social media, news trends)
- On-chain activity (e.g., simulated wallet activity, volume changes)
- Broader crypto market trends and related narratives (e.g., AI tokens, political meme coins, DeFi trends)

Based on these simulated factors, provide a response structured according to the output schema. Specifically:

1.  'analyzedTopic': Confirm the topic: "{{topic}}".
2.  'generatedNarrative': A 1-3 paragraph insight. This should be the core narrative. Address:
    *   The current market tone around "{{topic}}".
    *   Key catalysts or concerns influencing "{{topic}}".
    *   A probable storyline explaining why "{{topic}}" might experience significant price movement (pump/dump) soon.
3.  'marketTone': Summarize the current market tone for "{{topic}}" (e.g., "Cautiously optimistic", "Highly speculative with FOMO building", "Bearish sentiment dominating").
4.  'keyCatalystsOrConcerns': List 2-4 distinct key catalysts (e.g., "Upcoming product launch," "Sudden surge in influencer mentions") or concerns (e.g., "Regulatory uncertainty," "Decreasing developer activity").
5.  'probableStoryline': A concise storyline for "{{topic}}" (e.g., "If Bitcoin continues its rally, {{{topic}}} as a high-beta asset could see amplified gains, driven by retail interest returning to meme coins.")
6.  'strategicOutlook': A brief strategic outlook (e.g., "Short-term speculative play with tight stop-loss recommended; long-term viability questionable without further utility development.").
7.  'confidence': Your confidence ('High', 'Medium', 'Low') in this narrative assessment.
8.  'analysisDate': This will be set programmatically.

Focus on speculation catalysts and market psychology. Your tone should be insightful, hype-aware, and market-literate.
The 'disclaimer' will be added by the system.
`,
});

const getMarketNarrativesFlow = ai.defineFlow(
  {
    name: 'getMarketNarrativesFlow',
    inputSchema: GetMarketNarrativesInputSchema,
    outputSchema: GetMarketNarrativesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (output) {
      // Ensure analyzedTopic is set correctly, even if LLM generates it in narrativeInsight
      output.narrativeInsight.analyzedTopic = input.topic; 
      output.narrativeInsight.analysisDate = new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
      if (!output.disclaimer) {
        output.disclaimer = 'Narrative insights are AI-generated based on simulated market understanding and publicly available information. This does not constitute financial advice. Narratives can shift rapidly and are highly speculative. DYOR.';
      }
    }
    return output!;
  }
);

